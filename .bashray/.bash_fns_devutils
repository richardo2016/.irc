# zip
install_from_zip() {
  if [ -z "$1" ]; then
    echo "Usage: install_zip <zip_file> [install_dir]"
    return 1
  fi

  local zip_file=$1
  local install_dir=${2:-~/.bashray}

  if [ ! -d ${install_dir} ]; then
    mkdir -p ${install_dir}
  fi

  if [ -f ${zip_file} ]; then
    unzip -o ${zip_file} -d ${install_dir}
  else
    echo "Error: ${zip_file} not found"
    return 1
  fi
}

setup_android_envs() {
  if [ ! -z $ANDROID_HOME ]; then
    if [ ! -z $ANDROID_SDK_ROOT ]; then
        export ANDROID_SDK_ROOT=$ANDROID_HOME
    fi
    export PATH=$ANDROID_HOME/emulator:$PATH
    export PATH=$ANDROID_HOME/platform-tools:$PATH
    export PATH=$ANDROID_HOME/platforms:$PATH
    export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
  fi
}

# docker
docker_enter() {
  docker exec -it $1 bash;
}

docker_enter_bash() {
  docker exec -it $1 bash;
}

docker_enter_sh() {
  docker exec -it $1 sh;
}

# brew
enable_ustc_brew() {
  export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.ustc.edu.cn/brew.git"
  export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.ustc.edu.cn/homebrew-core.git"
  export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles"
  export HOMEBREW_API_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles/api"
}

android_shell_list_packages() {
  adb shell pm list packages -f
}

android_pull_apk_from() {
  if [ -z "$1" ]; then
    echo "Usage: android_pull_apk_from <package_name>"
    return 1
  fi

  local package_name=$1
  local target_dir=${2:-.}
  local apk_path=$(adb shell pm path $package_name | cut -d: -f2)
  local apk_name=$(basename $apk_path)
  local target_path=${target_dir}/${apk_name}

  echo "target_path is $target_path"

  adb pull $apk_path $target_path
}

android_dump_permissions() {
  $ANDROID_HOME/build-tools/34.0.0/aapt d permissions $1
}

modify_git_author_cmd() {
  echo "
git filter-branch -f --env-filter '
OLD_EMAIL=\"your-old-email@example.com\"
CORRECT_NAME=\"Your Correct Name\"
CORRECT_EMAIL=\"your-correct-email@example.com\"
if [ \"\$GIT_COMMITTER_EMAIL\" = \"\$OLD_EMAIL\" ]
then
    export GIT_COMMITTER_NAME=\"\$CORRECT_NAME\"
    export GIT_COMMITTER_EMAIL=\"\$CORRECT_EMAIL\"
fi
if [ \"\$GIT_AUTHOR_EMAIL\" = \"\$OLD_EMAIL\" ]
then
    export GIT_AUTHOR_NAME=\"\$CORRECT_NAME\"
    export GIT_AUTHOR_EMAIL=\"\$CORRECT_EMAIL\"
fi
' --tag-name-filter cat -- --branches --tags
"
}
